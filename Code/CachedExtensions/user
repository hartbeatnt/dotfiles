{"input":{"ourVersion":"1.23.1","commit":"d0182c3417d225529c6d5ad24b7572815d0de9ac","locale":"en-us","devMode":false,"absoluteFolderPath":"/Users/NateHart/.vscode/extensions","isBuiltin":false,"tanslations":{},"mtime":1527113394912},"result":[{"name":"andromeda","displayName":"Andromeda","description":"Dark theme with a taste of the universe","version":"1.1.1","icon":"images/icon.png","galleryBanner":{"color":"#23262E","theme":"dark"},"publisher":"EliverLara","author":{"name":"ELiver Lara","url":"https://github.com/EliverLara","email":"eliverlara@gmail.com"},"repository":{"url":"https://github.com/EliverLara/Andromeda"},"engines":{"vscode":"^1.14.0"},"categories":["Themes"],"contributes":{"themes":[{"label":"Andromeda","uiTheme":"vs-dark","path":"./themes/Andromeda-color-theme.json"},{"label":"Andromeda Italic","uiTheme":"vs-dark","path":"./themes/Andromeda-italic-color-theme.json"}]},"uuid":"98eb0f27-c79a-4ef5-b3ea-0554b885bfc5","isBuiltin":false,"id":"EliverLara.andromeda","extensionFolderPath":"/Users/NateHart/.vscode/extensions/EliverLara.andromeda-1.1.1"},{"name":"vscode-docker","version":"0.0.27","publisher":"PeterJausovec","displayName":"Docker","description":"Adds syntax highlighting, commands, hover tips, and linting for Dockerfile and docker-compose files.","license":"SEE LICENSE IN LICENSE.md","icon":"images/docker_icon.png","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","galleryBanner":{"color":"#1289B9","theme":"dark"},"categories":["Programming Languages","Linters","Azure"],"keywords":["docker","compose","container","multi-root ready"],"repository":{"url":"https://github.com/microsoft/vscode-docker.git"},"homepage":"https://github.com/Microsoft/vscode-docker/blob/master/README.md","activationEvents":["onLanguage:dockerfile","onLanguage:yaml","onCommand:vscode-docker.image.build","onCommand:vscode-docker.image.inspect","onCommand:vscode-docker.image.remove","onCommand:vscode-docker.image.push","onCommand:vscode-docker.image.tag","onCommand:vscode-docker.container.start","onCommand:vscode-docker.container.start.interactive","onCommand:vscode-docker.container.start.azurecli","onCommand:vscode-docker.container.stop","onCommand:vscode-docker.container.restart","onCommand:vscode-docker.container.show-logs","onCommand:vscode-docker.container.open-shell","onCommand:vscode-docker.compose.up","onCommand:vscode-docker.compose.down","onCommand:vscode-docker.configure","onCommand:vscode-docker.createWebApp","onCommand:vscode-docker.system.prune","onCommand:vscode-docker.dockerHubLogout","onCommand:vscode-docker.browseDockerHub","onCommand:vscode-docker.browseAzurePortal","onCommand:vscode-docker.explorer.refresh","onView:dockerExplorer","onDebugInitialConfigurations"],"main":"/Users/NateHart/.vscode/extensions/PeterJausovec.vscode-docker-0.0.27/out/dockerExtension","contributes":{"menus":{"commandPalette":[{"command":"vscode-docker.browseDockerHub","when":"false"},{"command":"vscode-docker.createWebApp","when":"false"}],"editor/context":[{"when":"editorLangId == dockerfile","command":"vscode-docker.image.build","group":"docker"},{"when":"resourceFilename == docker-compose.yml","command":"vscode-docker.compose.up","group":"docker"},{"when":"resourceFilename == docker-compose.yml","command":"vscode-docker.compose.down","group":"docker"},{"when":"resourceFilename == docker-compose.debug.yml","command":"vscode-docker.compose.up","group":"docker"},{"when":"resourceFilename == docker-compose.debug.yml","command":"vscode-docker.compose.down","group":"docker"}],"explorer/context":[{"when":"resourceFilename =~ /[dD]ocker[fF]ile/","command":"vscode-docker.image.build","group":"docker"},{"when":"resourceFilename =~ /[dD]ocker-[cC]ompose/","command":"vscode-docker.compose.up","group":"docker"},{"when":"resourceFilename =~ /[dD]ocker-[cC]ompose/","command":"vscode-docker.compose.down","group":"docker"}],"view/title":[{"command":"vscode-docker.explorer.refresh","when":"view == dockerExplorer","group":"navigation"},{"command":"vscode-docker.system.prune","when":"view == dockerExplorer","group":"navigation"}],"view/item/context":[{"command":"vscode-docker.container.start","when":"view == dockerExplorer && viewItem == localImageNode"},{"command":"vscode-docker.container.start","when":"view == dockerExplorer && viewItem == imagesRootNode"},{"command":"vscode-docker.container.start.interactive","when":"view == dockerExplorer && viewItem == localImageNode"},{"command":"vscode-docker.container.start.interactive","when":"view == dockerExplorer && viewItem == imagesRootNode"},{"command":"vscode-docker.image.push","when":"view == dockerExplorer && viewItem == localImageNode"},{"command":"vscode-docker.image.push","when":"view == dockerExplorer && viewItem == imagesRootNode"},{"command":"vscode-docker.image.remove","when":"view == dockerExplorer && viewItem == localImageNode"},{"command":"vscode-docker.image.remove","when":"view == dockerExplorer && viewItem == imagesRootNode"},{"command":"vscode-docker.image.inspect","when":"view == dockerExplorer && viewItem == localImageNode"},{"command":"vscode-docker.image.inspect","when":"view == dockerExplorer && viewItem == imagesRootNode"},{"command":"vscode-docker.image.tag","when":"view == dockerExplorer && viewItem == localImageNode"},{"command":"vscode-docker.image.tag","when":"view == dockerExplorer && viewItem == imagesRootNode"},{"command":"vscode-docker.container.stop","when":"view == dockerExplorer && viewItem == runningLocalContainerNode"},{"command":"vscode-docker.container.stop","when":"view == dockerExplorer && viewItem == containersRootNode"},{"command":"vscode-docker.container.restart","when":"view == dockerExplorer && viewItem == runningLocalContainerNode"},{"command":"vscode-docker.container.restart","when":"view == dockerExplorer && viewItem == stoppedLocalContainerNode"},{"command":"vscode-docker.container.restart","when":"view == dockerExplorer && viewItem == containersRootNode"},{"command":"vscode-docker.container.show-logs","when":"view == dockerExplorer && viewItem == runningLocalContainerNode"},{"command":"vscode-docker.container.show-logs","when":"view == dockerExplorer && viewItem == stoppedLocalContainerNode"},{"command":"vscode-docker.container.show-logs","when":"view == dockerExplorer && viewItem == containersRootNode"},{"command":"vscode-docker.container.open-shell","when":"view == dockerExplorer && viewItem == runningLocalContainerNode"},{"command":"vscode-docker.container.open-shell","when":"view == dockerExplorer && viewItem == containersRootNode"},{"command":"vscode-docker.container.remove","when":"view == dockerExplorer && viewItem == stoppedLocalContainerNode"},{"command":"vscode-docker.container.remove","when":"view == dockerExplorer && viewItem == runningLocalContainerNode"},{"command":"vscode-docker.container.remove","when":"view == dockerExplorer && viewItem == containersRootNode"},{"command":"vscode-docker.createWebApp","when":"view == dockerExplorer && viewItem == azureImageNode"},{"command":"vscode-docker.createWebApp","when":"view == dockerExplorer && viewItem == dockerHubImageTag"},{"command":"vscode-docker.dockerHubLogout","when":"view == dockerExplorer && viewItem == dockerHubRootNode"},{"command":"vscode-docker.browseDockerHub","when":"view == dockerExplorer && viewItem == dockerHubImageTag"},{"command":"vscode-docker.browseDockerHub","when":"view == dockerExplorer && viewItem == dockerHubRepository"},{"command":"vscode-docker.browseDockerHub","when":"view == dockerExplorer && viewItem == dockerHubNamespace"},{"command":"vscode-docker.browseAzurePortal","when":"view == dockerExplorer && viewItem == azureRegistryNode"},{"command":"vscode-docker.browseAzurePortal","when":"view == dockerExplorer && viewItem == azureRepositoryNode"},{"command":"vscode-docker.browseAzurePortal","when":"view == dockerExplorer && viewItem == azureImageNode"}]},"debuggers":[{"type":"docker","label":"Docker","configurationSnippets":[{"label":"Docker: Attach to Node","description":"Docker: Attach to Node","body":{"type":"node","request":"attach","name":"Docker: Attach to Node","port":9229,"address":"localhost","localRoot":"^\"\\${workspaceFolder}\"","remoteRoot":"/usr/src/app","protocol":"inspector"}}]}],"languages":[{"id":"dockerfile","aliases":["Dockerfile"],"filenamePatterns":["*.dockerfile","Dockerfile"]}],"configuration":{"type":"object","title":"Docker configuration options","properties":{"docker.defaultRegistry":{"type":"string","default":"","description":"Default registry when tagging an image, empty string will target Dockerhub when pushing."},"docker.defaultRegistryPath":{"type":"string","default":"","description":"Path within registry to push to."},"docker.showExplorer":{"type":"boolean","default":true,"description":"Show or hide the Explorer."},"docker.explorerRefreshInterval":{"type":"number","default":1000,"description":"Explorer refresh interval, default is 1000ms."},"docker.imageBuildContextPath":{"type":"string","default":"","description":"Build context PATH to pass to Docker build command."},"docker.truncateLongRegistryPaths":{"type":"boolean","default":false,"description":"Truncate long Image and Container registry paths in the Explorer."},"docker.truncateMaxLength":{"type":"number","default":10,"description":"Maximum number of characters for long registry paths in the Explorer, including elipsis."},"docker.languageserver.diagnostics.deprecatedMaintainer":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for the deprecated MAINTAINER instruction."},"docker.languageserver.diagnostics.emptyContinuationLine":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging empty continuation lines found in instructions that span multiple lines."},"docker.languageserver.diagnostics.directiveCasing":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for parser directives that are not written in lowercase."},"docker.languageserver.diagnostics.instructionCasing":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for instructions that are not written in uppercase."},"docker.languageserver.diagnostics.instructionCmdMultiple":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging a Dockerfile with multiple CMD instructions."},"docker.languageserver.diagnostics.instructionEntrypointMultiple":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging a Dockerfile with multiple ENTRYPOINT instructions."},"docker.languageserver.diagnostics.instructionHealthcheckMultiple":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging a Dockerfile with multiple HEALTHCHECK instructions."},"docker.languageserver.diagnostics.instructionJSONInSingleQuotes":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for JSON instructions that are written incorrectly with single quotes."},"docker.attachShellCommand.linuxContainer":{"type":"string","default":"/bin/sh","description":"Attach command to use for Linux containers"},"docker.attachShellCommand.windowsContainer":{"type":"string","default":"powershell","description":"Attach command to use for Windows containers"},"docker.promptOnSystemPrune":{"type":"boolean","default":true,"description":"Prompt for confirmation when running System Prune command"},"docker.dockerComposeBuild":{"type":"boolean","default":true,"description":"Run docker-compose with the --build argument, defaults to true"},"docker.dockerComposeDetached":{"type":"boolean","default":true,"description":"Run docker-compose with the --d (detached) argument, defaults to true"}}},"commands":[{"command":"vscode-docker.configure","title":"Add Docker files to Workspace","description":"Add Dockerfile, docker-compose.yml files","category":"Docker"},{"command":"vscode-docker.image.build","title":"Build Image","description":"Build a Docker image from a Dockerfile","category":"Docker"},{"command":"vscode-docker.image.inspect","title":"Inspect Image","description":"Inspect the metadata of a Docker image","category":"Docker"},{"command":"vscode-docker.image.remove","title":"Remove Image","description":"Remove a Docker image","category":"Docker"},{"command":"vscode-docker.image.tag","title":"Tag Image","description":"Tag a Docker image","category":"Docker"},{"command":"vscode-docker.container.start","title":"Run","description":"Starts a container from an image","category":"Docker"},{"command":"vscode-docker.container.start.interactive","title":"Run Interactive","description":"Starts a container from an image and runs it interactively","category":"Docker"},{"command":"vscode-docker.container.start.azurecli","title":"Azure CLI","description":"Starts a container from the Azure CLI image and runs it interactively","category":"Docker"},{"command":"vscode-docker.container.stop","title":"Stop Container","description":"Stop a running container","category":"Docker"},{"command":"vscode-docker.container.restart","title":"Restart Container","description":"Restart one or more containers","category":"Docker"},{"command":"vscode-docker.container.remove","title":"Remove Container","description":"Remove a stopped container","category":"Docker"},{"command":"vscode-docker.container.show-logs","title":"Show Logs","description":"Show the logs of a running container","category":"Docker"},{"command":"vscode-docker.container.open-shell","title":"Attach Shell","description":"Open a terminal with an interactive shell for a running container","category":"Docker"},{"command":"vscode-docker.compose.up","title":"Compose Up","description":"Starts a composition of containers","category":"Docker"},{"command":"vscode-docker.compose.down","title":"Compose Down","description":"Stops a composition of containers","category":"Docker"},{"command":"vscode-docker.image.push","title":"Push","description":"Push an image to a registry","category":"Docker"},{"command":"vscode-docker.system.prune","title":"System Prune","category":"Docker","icon":{"light":"images/light/prune.svg","dark":"images/dark/prune.svg"}},{"command":"vscode-docker.explorer.refresh","title":"Refresh Explorer","category":"Docker","icon":{"light":"images/light/refresh.svg","dark":"images/dark/refresh.svg"}},{"command":"vscode-docker.createWebApp","title":"Deploy Image to Azure App Service","category":"Docker"},{"command":"vscode-docker.dockerHubLogout","title":"DockerHub Logout","category":"Docker"},{"command":"vscode-docker.browseDockerHub","title":"Browse in DockerHub","category":"Docker"},{"command":"vscode-docker.browseAzurePortal","title":"Browse in the Azure Portal","category":"Docker"}],"views":{"dockerView":[{"id":"dockerExplorer","name":"Explorer","when":"config.docker.showExplorer == true"}]},"viewsContainers":{"activitybar":[{"icon":"images/docker.svg","id":"dockerView","title":"Docker"}]}},"engines":{"vscode":"^1.23.0"},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"extensionDependencies":["vscode.docker","vscode.yaml"],"devDependencies":{"vscode":"^1.0.0","typescript":"^2.1.5","@types/node":"^8.0.34","@types/keytar":"^4.0.1"},"dependencies":{"azure-arm-containerregistry":"^1.0.0-preview","azure-arm-resource":"^2.0.0-preview","azure-arm-website":"^1.0.0-preview","dockerfile-language-server-nodejs":"^0.0.17","dockerode":"^2.5.1","gradle-to-js":"^1.0.1","moment":"^2.19.3","opn":"^5.1.0","pom-parser":"^1.1.1","request-promise":"^4.2.2","vscode-extension-telemetry":"^0.0.6","vscode-languageclient":"^4.0.0"},"uuid":"0479fc1c-3d67-49f9-b087-fb9069afe48f","isBuiltin":false,"id":"PeterJausovec.vscode-docker","extensionFolderPath":"/Users/NateHart/.vscode/extensions/PeterJausovec.vscode-docker-0.0.27"},{"name":"unity-tools","displayName":"Unity Tools","description":"Various tools to help with Unity development","version":"1.0.4","publisher":"Tobiah","engines":{"vscode":"^1.23.0"},"license":"SEE LICENSE IN LICENSE.txt","homepage":"https://github.com/TobiahZ/unity-tools","repository":{"type":"git","url":"https://github.com/TobiahZ/unity-tools.git"},"categories":["Other","Extension Packs"],"extensionDependencies":["Unity.unity-debug"],"bugs":"https://github.com/TobiahZ/unity-tools/issues","keywords":["unity","unity3d","docs","documentation","asset store","multi-root ready"],"activationEvents":["onCommand:unity-tools.OpenDocs","onCommand:unity-tools.SearchDocs","onCommand:unity-tools.SearchMSDNDocs","onCommand:unity-tools.OpenVSCodeDocs","onCommand:unity-tools.CreateDirectories"],"main":"/Users/NateHart/.vscode/extensions/Tobiah.unity-tools-1.0.4/out/extension","contributes":{"commands":[{"command":"unity-tools.OpenDocs","title":"Unity Tools: Open Documentation for Selection"},{"command":"unity-tools.SearchDocs","title":"Unity Tools: Search Documentation"},{"command":"unity-tools.SearchMSDNDocs","title":"Unity Tools: Search MSDN Documentation"},{"command":"unity-tools.OpenVSCodeDocs","title":"Unity Tools: Open VSCode Documentation"},{"command":"unity-tools.CreateDirectories","title":"Unity Tools: Generate Organizational Folders"}],"menus":{"editor/context":[{"when":"editorHasSelection && editorLangId == 'csharp' && config.unity-tools.enableRightClickSearch","command":"unity-tools.OpenDocs","group":"navigation@1"}]},"keybindings":[{"key":"ctrl+'","mac":"cmd+'","when":"editorTextFocus && editorLangId == 'csharp'","command":"unity-tools.OpenDocs"},{"key":"ctrl+shift+'","mac":"cmd+shift+'","when":"editorTextFocus && editorLangId == 'csharp'","command":"unity-tools.SearchDocs"}],"configuration":{"type":"object","title":"Unity-Tools Settings","properties":{"unity-tools.defaultOrganizationFolders":{"type":"array","items":{"type":"string"},"default":["Materials","Scenes","Scripts","Prefabs","Audio"],"description":"Sets which folders will be generated from the unity-tools.GenerateOrganizationFolders command"},"unity-tools.enableRightClickSearch":{"type":"boolean","default":true,"description":"Enables the \"Open Documentation\" option on right-click menu."}}}},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^2.6.1","vscode":"^1.1.6","tslint":"^5.8.0","@types/node":"^10.0.6","@types/mocha":"^2.2.42"},"dependencies":{"opn":"^5.3.0"},"icon":"unity-logo.png","uuid":"df7dc071-4d1a-488b-9984-2f4fc42331f3","isBuiltin":false,"id":"Tobiah.unity-tools","extensionFolderPath":"/Users/NateHart/.vscode/extensions/Tobiah.unity-tools-1.0.4"},{"name":"unity-debug","displayName":"Debugger for Unity","version":"1.3.0","publisher":"Unity","description":"Unity debugger extension","engines":{"vscode":"^0.10.1"},"categories":["Debuggers"],"keywords":["unity","unity3d","debugger","debug"],"homepage":"https://github.com/Unity-Technologies/vscode-unity-debug","bugs":{"url":"https://github.com/Unity-Technologies/vscode-unity-debug/issues"},"repository":{"type":"git","url":"https://github.com/Unity-Technologies/vscode-unity-debug.git"},"icon":"Images/unity-logo128x128.png","main":"/Users/NateHart/.vscode/extensions/Unity.unity-debug-1.3.0/attach","activationEvents":["onCommand:attach.attachToDebugger"],"scripts":{"postinstall":"node ./node_modules/vscode/bin/install"},"contributes":{"commands":[{"command":"attach.attachToDebugger","title":"Unity Attach Debugger"}],"debuggers":[{"type":"unity","label":"Unity Debugger","configurationAttributes":{"launch":{},"attach":{}},"enableBreakpointsFor":{"languageIds":["csharp"]},"program":"./bin/UnityDebug.exe","osx":{"runtime":"mono"},"linux":{"runtime":"mono"},"initialConfigurations":[{"name":"Unity Editor","type":"unity","request":"launch"},{"name":"Windows Player","type":"unity","request":"launch"},{"name":"OSX Player","type":"unity","request":"launch"},{"name":"Linux Player","type":"unity","request":"launch"},{"name":"iOS Player","type":"unity","request":"launch"},{"name":"Android Player","type":"unity","request":"launch"}]}]},"uuid":"b0605276-f92b-4616-be91-ea11ec64dd1f","isBuiltin":false,"id":"Unity.unity-debug","extensionFolderPath":"/Users/NateHart/.vscode/extensions/Unity.unity-debug-1.3.0"},{"name":"unity-snippets","displayName":"Unity Snippets","publisher":"YclepticStudios","description":"Unity MonoBehaviour function snippets with documentation.","version":"0.1.2","engines":{"vscode":"0.10.x"},"categories":["Snippets"],"contributes":{"snippets":[{"language":"csharp","path":"./snippets/snippets.json"}]},"icon":"images/icon.png","galleryBanner":{"color":"#046380","theme":"dark"},"license":"SEE LICENSE IN LICENSE.md","bugs":{"url":"https://github.com/YclepticStudios/vscode-unity-snippets/issues"},"homepage":"https://github.com/YclepticStudios/vscode-unity-snippets/blob/master/README.md","repository":{"type":"git","url":"https://github.com/YclepticStudios/vscode-unity-snippets.git"},"uuid":"ebb13f5c-e0ec-4bf9-a6ca-983340e3a2e8","isBuiltin":false,"id":"YclepticStudios.unity-snippets","extensionFolderPath":"/Users/NateHart/.vscode/extensions/YclepticStudios.unity-snippets-0.1.2"},{"name":"nord-visual-studio-code","displayName":"Nord","description":"An arctic, north-bluish clean and elegant Visual Studio Code theme.","version":"0.6.0","publisher":"arcticicestudio","author":{"name":"Arctic Ice Studio","email":"development@arcticicestudio.com"},"homepage":"https://github.com/arcticicestudio/nord-visual-studio-code","repository":{"type":"git","url":"https://github.com/arcticicestudio/nord-visual-studio-code"},"bugs":{"url":"https://github.com/arcticicestudio/nord-visual-studio-code/issues"},"license":"(Apache-2.0 AND CC-BY-SA-4.0)","engines":{"vscode":"^1.12.0"},"galleryBanner":{"color":"#2E3440","theme":"dark"},"icon":"assets/nord-visual-studio-code-icon-marketplace.png","markdown":"github","categories":["Themes"],"keywords":["arctic","north","bluish","clean","elegant"],"badges":[{"url":"https://vsmarketplacebadge.apphb.com/version/arcticicestudio.nord-visual-studio-code.svg","href":"https://marketplace.visualstudio.com/items/arcticicestudio.nord-visual-studio-code","description":"Extension version"},{"url":"https://vsmarketplacebadge.apphb.com/installs/arcticicestudio.nord-visual-studio-code.svg","href":"https://marketplace.visualstudio.com/items/arcticicestudio.nord-visual-studio-code","description":"Extension installs"},{"url":"https://vsmarketplacebadge.apphb.com/rating/arcticicestudio.nord-visual-studio-code.svg","href":"https://marketplace.visualstudio.com/items/arcticicestudio.nord-visual-studio-code","description":"Extension Rating"}],"contributes":{"themes":[{"label":"Nord","uiTheme":"vs-dark","path":"./themes/nord.json"}]},"devDependencies":{"eslint":"3.19.0","eslint-plugin-json":"1.2.0","gulp":"3.9.1","gulp-eslint":"3.0.1","gulp-help":"1.6.1"},"uuid":"6f35c257-7fd5-4bc2-9cd1-01976589c17a","isBuiltin":false,"id":"arcticicestudio.nord-visual-studio-code","extensionFolderPath":"/Users/NateHart/.vscode/extensions/arcticicestudio.nord-visual-studio-code-0.6.0"},{"name":"spacemacs","displayName":"Spacemacs","description":"Spacemacs themes for Visual Studio Code","version":"1.1.1","publisher":"cometeer","engines":{"vscode":"^1.12.0"},"categories":["Themes"],"contributes":{"themes":[{"label":"Spacemacs - light","uiTheme":"vs","path":"./themes/Spacemacs-light-color-theme.json"},{"label":"Spacemacs - dark","uiTheme":"vs-dark","path":"./themes/Spacemacs-dark-color-theme.json"}]},"repository":{"type":"git","url":"git+https://github.com/cometeer/spacemacs-vscode.git"},"keywords":["vs-code","theme","spacemacs"],"author":"cometeer","license":"ISC","bugs":{"url":"https://github.com/cometeer/spacemacs-vscode/issues"},"homepage":"https://github.com/cometeer/spacemacs-vscode#readme","icon":"assets/icon.png","uuid":"5377d680-e3f1-43bc-a2a8-0386b693b58b","isBuiltin":false,"id":"cometeer.spacemacs","extensionFolderPath":"/Users/NateHart/.vscode/extensions/cometeer.spacemacs-1.1.1"},{"name":"eppz-code","displayName":"eppz! (C# theme for Unity)","version":"1.2.41","description":"Carefully designed colors with meanings.","keywords":["unity 3d","c#","theme","syntax coloring","class","unity","unity3d","unity 3d","c#","c sharp","csharp","c-sharp","cs",".cs","*.cs","color","colour","coloring","colouring","theme","color theme","scheme","color scheme","syntax","syntax coloring","syntax colouring","language","language grammar","language extension","code","script","class","classes","type","types","unity code","unity script","unity class","unity classes","unity type","unity types","vscode","vs code","visual studio","visual studio code","eppz","eppz!"],"publisher":"eppz","license":"CC-BY-NC-4.0","author":{"name":"Geri Borbás (eppz!)","url":"https://twitter.com/_eppz"},"icon":"images/eppz-Code_icon_128px.png","galleryBanner":{"color":"#2b2d35","theme":"dark"},"repository":{"type":"git","url":"https://github.com/eppz/VSCode.Extension.eppz_Code"},"homepage":"https://github.com/eppz/VSCode.Extension.eppz_Code/blob/master/README.md","bugs":{"url":"https://github.com/eppz/VSCode.Extension.eppz_Code/issues"},"categories":["Languages","Themes"],"engines":{"vscode":"^1.10.0"},"contributes":{"languages":[{"id":"official","aliases":["C# (official)"],"extensions":[".official"],"configuration":"./language-configuration.json"},{"id":"unity","aliases":["C# (Unity)"],"extensions":[".unity"],"configuration":"./language-configuration.json"},{"id":"extensions","aliases":["C# (extensions)"],"extensions":[".extensions"],"configuration":"./language-configuration.json"},{"id":"extended","aliases":["C# (extended)"],"extensions":[".extended"],"configuration":"./language-configuration.json"},{"id":"csharp"}],"grammars":[{"language":"official","scopeName":"source.cs.official","path":"./syntaxes/csharp.official.tmLanguage"},{"language":"unity","scopeName":"source.cs.unity","path":"./syntaxes/source.cs.unity.json"},{"language":"extensions","scopeName":"source.cs.extensions","path":"./syntaxes/source.cs.extensions.json"},{"language":"extended","scopeName":"source.cs.extended","path":"./syntaxes/csharp.extended.tmLanguage"},{"language":"csharp","scopeName":"source.cs","path":"./syntaxes/source.cs.json"}],"themes":[{"label":"eppz!","uiTheme":"vs-dark","path":"./themes/default/eppz-code.json"}],"commands":[{"command":"eppz.code.popUpReview","title":"Pop up review notification for eppz! (C# theme for Unity)"},{"command":"eppz.code.resetReviewCounters","title":"Reset review notification counters for eppz! (C# theme for Unity)"}],"configuration":{"type":"object","title":"eppz! (C# theme for Unity) configuration","properties":{"eppz-code.disableAnalytics":{"type":"boolean","default":false,"description":"Disable usage analytics."}}}},"activationEvents":["*"],"main":"/Users/NateHart/.vscode/extensions/eppz.eppz-code-1.2.41/out/src/main","scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"dependencies":{"electron-google-analytics":"^0.0.16"},"devDependencies":{"typescript":"^2.0.3","vscode":"^1.0.0","@types/node":"^6.0.40"},"uuid":"fa63aa30-e63a-48b1-876d-562a57da717f","isBuiltin":false,"id":"eppz.eppz-code","extensionFolderPath":"/Users/NateHart/.vscode/extensions/eppz.eppz-code-1.2.41"},{"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"VS Code plugin for prettier/prettier","version":"1.3.1","publisher":"esbenp","author":"Esben Petersen <@esbenp>","galleryBanner":{"color":"#ffe04b","theme":"light"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.17.0"},"keywords":["multi-root ready"],"categories":["Formatters"],"activationEvents":["*"],"icon":"icon.png","main":"/Users/NateHart/.vscode/extensions/esbenp.prettier-vscode-1.3.1/out/src/extension","contributes":{"configuration":{"type":"object","title":"Prettier - Code formatter configuration","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"default":["vue"],"description":"A list of languages IDs to disable this extension on","scope":"resource"},"prettier.eslintIntegration":{"type":"boolean","default":false,"description":"Use 'prettier-eslint' instead of 'prettier'. Other settings will only be fallbacks in case they could not be inferred from eslint rules.","scope":"resource"},"prettier.stylelintIntegration":{"type":"boolean","default":false,"description":"Use 'prettier-stylelint' instead of 'prettier'. Other settings will only be fallbacks in case they could not be inferred from stylelint rules.","scope":"resource"},"prettier.requireConfig":{"type":"boolean","default":false,"description":"Require a 'prettierconfig' to format","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","description":"Path to a .prettierignore or similar file","scope":"resource"},"prettier.printWidth":{"type":"integer","default":80,"description":"Fit code within this line limit","scope":"resource"},"prettier.tabWidth":{"type":"integer","default":2,"description":"Number of spaces it should use per tab","scope":"resource"},"prettier.singleQuote":{"type":"boolean","default":false,"description":"If true, will use single instead of double quotes","scope":"resource"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"none","description":"Controls the printing of trailing commas wherever possible.\n Valid options:\n    'none' - No trailing commas\n    'es5' - Trailing commas where valid in ES5 (objects, arrays, etc)\n    'all' - Trailing commas wherever possible (function arguments)","scope":"resource"},"prettier.bracketSpacing":{"type":"boolean","default":true,"description":"Controls the printing of spaces inside object literals","scope":"resource"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"description":"If true, puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line","scope":"resource"},"prettier.parser":{"type":"string","enum":["babylon","flow"],"default":"babylon","description":"Override the parser. You shouldn't have to change this setting.","scope":"resource"},"prettier.semi":{"type":"boolean","default":true,"description":"Whether to add a semicolon at the end of every line","scope":"resource"},"prettier.useTabs":{"type":"boolean","default":false,"description":"Indent lines with tabs","scope":"resource"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","description":"(Markdown) wrap prose over multiple lines"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"avoid","description":"Include parentheses around a sole arrow function parameter","scope":"resource"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"http://json.schemastore.org/prettierrc"}],"languages":[{"id":"json","filenames":[".prettierrc"]}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"cd testEslint && npm i && cd .. && cross-env CODE_TESTS_WORKSPACE=testWorkspace.code-workspace node ./node_modules/vscode/bin/test","version":"node ./scripts/version.js && git add CHANGELOG.md"},"devDependencies":{"@types/mocha":"^2.2.44","@types/node":"^7.0.48","@types/resolve":"0.0.6","cross-env":"^5.1.1","mocha":"^3.5.3","typescript":"^2.6.2","vscode":"^1.1.10"},"dependencies":{"ignore":"^3.3.7","prettier":"1.12.1","prettier-eslint":"^8.8.1","prettier-stylelint":"^0.4.1","read-pkg-up":"2.0.0","resolve":"^1.5.0"},"uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","isBuiltin":false,"id":"esbenp.prettier-vscode","extensionFolderPath":"/Users/NateHart/.vscode/extensions/esbenp.prettier-vscode-1.3.1"},{"name":"auto-close-tag","displayName":"Auto Close Tag","description":"Automatically add HTML/XML close tag, same as Visual Studio IDE or Sublime Text","version":"0.5.6","publisher":"formulahendry","icon":"images/logo.png","engines":{"vscode":"^1.16.0"},"categories":["Other","Languages"],"keywords":["AutoComplete","close","tag","html","xml","multi-root ready"],"bugs":{"url":"https://github.com/formulahendry/vscode-auto-close-tag/issues","email":"formulahendry@gmail.com"},"homepage":"https://github.com/formulahendry/vscode-auto-close-tag/blob/master/README.md","repository":{"type":"git","url":"https://github.com/formulahendry/vscode-auto-close-tag.git"},"activationEvents":["*","onCommand:auto-close-tag.closeTag"],"main":"/Users/NateHart/.vscode/extensions/formulahendry.auto-close-tag-0.5.6/out/src/extension","contributes":{"commands":[{"command":"auto-close-tag.closeTag","title":"Close Tag"}],"keybindings":[{"command":"auto-close-tag.closeTag","key":"alt+.","mac":"cmd+alt+."}],"configuration":{"type":"object","title":"Auto Close Tag configuration","properties":{"auto-close-tag.activationOnLanguage":{"type":"array","default":["xml","php","blade","ejs","jinja","javascript","javascriptreact","typescript","typescriptreact","plaintext","markdown","vue","liquid","erb","lang-cfml","cfml","HTML (Eex)"],"description":"Set the languages that the extension will be activated.  e.g. [\"html\",\"xml\",\"php\"]. Use [\"*\"] to activate for all languages.","scope":"resource"},"auto-close-tag.excludedTags":{"type":"array","default":["area","base","br","col","command","embed","hr","img","input","keygen","link","meta","param","source","track","wbr"],"description":"Set the tag list that would not be auto closed.","scope":"resource"},"auto-close-tag.SublimeText3Mode":{"type":"boolean","default":false,"description":"Auto close tag when </ is typed, same as Sublime Text 3","scope":"resource"},"auto-close-tag.enableAutoCloseTag":{"type":"boolean","default":true,"description":"Whether to insert close tag automatically","scope":"resource"},"auto-close-tag.enableAutoCloseSelfClosingTag":{"type":"boolean","default":true,"description":"Whether to close self-closing tag automatically","scope":"resource"},"auto-close-tag.fullMode":{"type":"boolean","default":false,"description":"Enable both Visual Studio and Sublime Text mode","scope":"resource"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"typescript":"^2.0.3","vscode":"^1.0.0","mocha":"^2.3.3","@types/node":"^6.0.40","@types/mocha":"^2.2.32"},"uuid":"d3836729-9cc1-42c1-b2af-d50071f57d29","isBuiltin":false,"id":"formulahendry.auto-close-tag","extensionFolderPath":"/Users/NateHart/.vscode/extensions/formulahendry.auto-close-tag-0.5.6"},{"name":"fountain","displayName":"Fountain","description":"Add Fountain language support","version":"1.0.0","publisher":"massivedanger","engines":{"vscode":"^1.5.0"},"categories":["Languages"],"contributes":{"languages":[{"id":"fountain","aliases":["Fountain","fountain"],"extensions":[".fountain",".spmd"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"fountain","scopeName":"text.source.fountain","path":"./syntaxes/fountain.tmLanguage"}]},"uuid":"87b1362f-4a9a-4fb7-b4e0-52823daf5df2","isBuiltin":false,"id":"massivedanger.fountain","extensionFolderPath":"/Users/NateHart/.vscode/extensions/massivedanger.fountain-1.0.0"},{"name":"dotenv","displayName":"DotENV","description":"Support for dotenv file syntax","version":"1.0.1","publisher":"mikestead","license":"MIT","engines":{"vscode":"^1.5.1"},"categories":["Languages"],"keywords":["env","dotenv"],"icon":"images/icon.png","galleryBanner":{"color":"#3E1661","theme":"dark"},"repository":{"type":"git","url":"https://github.com/mikestead/vscode-dotenv.git"},"contributes":{"languages":[{"id":"dotenv","aliases":["Environment Variables","dotenv","env"],"extensions":[".env",".env-sample",".env.example",".env.local",".env.dev",".env.dev.local",".env.development",".env.development.local",".env.test",".env.test.local",".env.testing",".env.qa",".env.qa.local",".env.uat",".env.uat.local",".env.stag",".env.stag.local",".env.staging",".env.staging.local",".env.production",".env.production.local"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"dotenv","scopeName":"source.env","path":"./syntaxes/env.tmLanguage"}]},"uuid":"532533c9-a894-4a58-9eee-bbfbe7c06f71","isBuiltin":false,"id":"mikestead.dotenv","extensionFolderPath":"/Users/NateHart/.vscode/extensions/mikestead.dotenv-1.0.1"},{"name":"cpptools","displayName":"C/C++","description":"C/C++ IntelliSense, debugging, and code browsing.","version":"0.17.3","publisher":"ms-vscode","preview":true,"icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.22.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","IntelliSense","Microsoft","multi-root ready"],"categories":["Programming Languages","Debuggers","Formatters","Linters","Snippets"],"activationEvents":["*"],"main":"/Users/NateHart/.vscode/extensions/ms-vscode.cpptools-0.17.3/out/src/main","contributes":{"problemMatchers":[{"name":"gcc","owner":"cpptools","fileLocation":["relative","${workspaceFolder}"],"pattern":{"regexp":"^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}}],"configuration":{"type":"object","title":"C/C++ Configuration","properties":{"C_Cpp.clang_format_path":{"type":["string","null"],"default":null,"description":"The full path of the clang-format executable.","scope":"resource"},"C_Cpp.clang_format_style":{"type":"string","default":"file","description":"Coding style, currently supports: Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit. Use \"file\" to load the style from a .clang-format file in the current or parent directory. Use \"{key: value, ...}\" to set specific parameters, e.g.: \"{ BasedOnStyle: LLVM, IndentWidth: 8 }\"","scope":"resource"},"C_Cpp.clang_format_fallbackStyle":{"type":"string","default":"Visual Studio","description":"Name of the predefined style used as a fallback in case clang-format is invoked with style \"file\" but the .clang-format file is not found. Possible values are Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit, none, or use \"{key: value, ...}\" to set specific parameters, e.g.: \"{ BasedOnStyle: LLVM, IndentWidth: 8 }\"","scope":"resource"},"C_Cpp.clang_format_sortIncludes":{"type":["boolean","null"],"enum":[true,false,null],"default":null,"description":"If set, overrides the include sorting behavior determined by the SortIncludes parameter.","scope":"resource"},"C_Cpp.intelliSenseEngine":{"type":"string","enum":["Default","Tag Parser"],"default":"Default","description":"Controls the IntelliSense provider. \"Tag Parser\" provides \"fuzzy\" results that are not context-aware. \"Default\" provides context-aware results and is in preview mode - member list, hover tooltips, and error squiggles are currently implemented. Features not yet implemented in the new default engine will use the tag parser engine instead.","scope":"resource"},"C_Cpp.intelliSenseEngineFallback":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Controls whether the IntelliSense engine will automatically switch to the Tag Parser for translation units containing #include errors.","scope":"resource"},"C_Cpp.autocomplete":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"Controls the auto-completion provider. \"Default\" uses the active IntelliSense engine. \"Disabled\" uses the word-based completion provided by Visual Studio Code.","scope":"resource"},"C_Cpp.errorSquiggles":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Controls whether suspected compile errors detected by the IntelliSense engine will be reported back to the editor. Warnings about #includes that could not be located will always be reported to the editor. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.dimInactiveRegions":{"type":"boolean","default":true,"description":"Controls whether inactive preprocessor blocks are colored differently than active code. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.formatting":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"\"Default\" enables code formatting. \"Disabled\" disables code formatting.","scope":"resource"},"C_Cpp.navigation.length":{"type":"number","default":60,"description":"Maximum character length of the scope/navigation UI in the status bar. The UI may not appear if this value is too large.","scope":"resource"},"C_Cpp.loggingLevel":{"type":"string","enum":["None","Error","Warning","Information","Debug"],"default":"Error","description":"The verbosity of logging in the Output Panel. The order of levels from least verbose to most verbose is: None < Error < Warning < Information < Debug.","scope":"resource"},"C_Cpp.autoAddFileAssociations":{"type":"boolean","default":true,"description":"Controls whether files are automatically added to files.associations when they are the target of a navigation operation from a C/C++ file.","scope":"resource"},"C_Cpp.workspaceParsingPriority":{"type":"string","enum":["highest","high","medium","low"],"default":"highest","description":"Controls whether parsing of the non-active workspace files uses sleeps to avoid using 100% CPU. The values highest/high/medium/low correspond to approximately 100/75/50/25% CPU usage.","scope":"resource"},"C_Cpp.exclusionPolicy":{"type":"string","enum":["checkFolders","checkFilesAndFolders"],"default":"checkFolders","description":"Instructs the extension when to use the \"files.exclude\" setting when determining which files should be added to the code navigation database while traversing through the paths in the \"browse.path\" array. \"checkFolders\" means that the exclusion filters will only be evaluated once per folder (individual files are not checked). \"checkFilesAndFolders\" means that the exclusion filters will be evaluated against every file and folder encountered. If your \"files.exclude\" setting only contains folders, then \"checkFolders\" is the best choice and will increase the speed at which the extension can initialize the code navigation database.","scope":"resource"},"C_Cpp.preferredPathSeparator":{"type":"string","enum":["Forward Slash","Backslash"],"default":"Forward Slash","description":"The character used as a path separator for #include auto-completion results.","scope":"resource"},"C_Cpp.commentContinuationPatterns":{"type":"array","default":["/**"],"items":{"anyOf":[{"type":"string","description":"The pattern that begins a multiline or single line comment block. The continuation pattern defaults to ' * ' for multiline comment blocks or this string for single line comment blocks."},{"type":"object","properties":{"begin":{"type":"string","description":"The pattern that begins a multiline or single line comment block."},"continue":{"type":"string","description":"The text that will be inserted on the next line when Enter is pressed inside a multiline or single line comment block."}}}]},"description":"Defines the editor behavior for when the Enter key is pressed inside a multiline or single line comment block.","scope":"resource"},"C_Cpp.default.includePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"includePath\" is not specified, or the values to insert if \"${default}\" is present in \"includePath\".","scope":"resource"},"C_Cpp.default.defines":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"defines\" is not specified, or the values to insert if \"${default}\" is present in \"defines\".","scope":"resource"},"C_Cpp.default.macFrameworkPath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"macFrameworkPath\" is not specified, or the values to insert if \"${default}\" is present in \"macFrameworkPath\".","scope":"resource"},"C_Cpp.default.compileCommands":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compileCommands\" is either not specified, or set to \"${default}\".","scope":"resource"},"C_Cpp.default.forcedInclude":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"forcedInclude\" is not specified, or the values to insert if \"${default}\" is present in \"forcedInclude\".","scope":"resource"},"C_Cpp.default.intelliSenseMode":{"type":["string","null"],"enum":["msvc-x64","clang-x64"],"default":null,"description":"The value to use in a configuration if \"intelliSenseMode\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.compilerPath":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compilerPath\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.cStandard":{"type":["string","null"],"enum":["c89","c99","c11"],"default":null,"description":"The value to use in a configuration if \"cStandard\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.cppStandard":{"type":["string","null"],"enum":["c++98","c++03","c++11","c++14","c++17"],"default":null,"description":"The value to use in a configuration if \"cppStandard\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.path":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"browse.path\" is not specified, or the values to insert if \"${default}\" is present in \"browse.path\".","scope":"resource"},"C_Cpp.default.browse.databaseFilename":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"browse.databaseFilename\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.limitSymbolsToIncludedHeaders":{"type":"boolean","default":true,"description":"The value to use in a configuration if \"browse.limitSymbolsToIncludedHeaders\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.systemIncludePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use for the system include path. If set, it overrides the system include path acquired via \"compilerPath\" and \"compileCommands\" settings.","scope":"resource"}}},"commands":[{"command":"C_Cpp.ConfigurationSelect","title":"Select a Configuration...","category":"C/Cpp"},{"command":"C_Cpp.ConfigurationEdit","title":"Edit Configurations...","category":"C/Cpp"},{"command":"C_Cpp.GoToDeclaration","title":"Go to Declaration","category":"C/Cpp"},{"command":"C_Cpp.PeekDeclaration","title":"Peek Declaration","category":"C/Cpp"},{"command":"C_Cpp.SwitchHeaderSource","title":"Switch Header/Source","category":"C/Cpp"},{"command":"C_Cpp.Navigate","title":"Navigate...","category":"C/Cpp"},{"command":"C_Cpp.ToggleSnippets","title":"Toggle Snippets","category":"C/Cpp"},{"command":"C_Cpp.ToggleErrorSquiggles","title":"Toggle Error Squiggles","category":"C/Cpp"},{"command":"C_Cpp.ToggleIncludeFallback","title":"Toggle IntelliSense Engine Fallback on Include Errors","category":"C/Cpp"},{"command":"C_Cpp.ToggleDimInactiveRegions","title":"Toggle Inactive Region Colorization","category":"C/Cpp"},{"command":"C_Cpp.ShowReleaseNotes","title":"Show Release Notes","category":"C/Cpp"},{"command":"C_Cpp.ResetDatabase","title":"Reset IntelliSense Database","category":"C/Cpp"},{"command":"C_Cpp.PauseParsing","title":"Pause Parsing","category":"C/Cpp"},{"command":"C_Cpp.ResumeParsing","title":"Resume Parsing","category":"C/Cpp"},{"command":"C_Cpp.ShowParsingCommands","title":"Show Parsing Commands","category":"C/Cpp"},{"command":"C_Cpp.TakeSurvey","title":"Take Survey","category":"C/Cpp"}],"keybindings":[{"command":"C_Cpp.GoToDeclaration","key":"Ctrl+F12","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.GoToDeclaration","key":"Ctrl+F12","when":"editorTextFocus && editorLangId == 'c'"},{"command":"C_Cpp.PeekDeclaration","key":"Ctrl+Alt+F12","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.PeekDeclaration","key":"Ctrl+Alt+F12","when":"editorTextFocus && editorLangId == 'c'"},{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorTextFocus && editorLangId == 'c'"},{"command":"C_Cpp.Navigate","key":"Alt+N","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.Navigate","key":"Alt+N","when":"editorTextFocus && editorLangId == 'c'"}],"debuggers":[{"type":"cppdbg","label":"C++ (GDB/LLDB)","enableBreakpointsFor":{"languageIds":["c","cpp"]},"adapterExecutableCommand":"extension.cppdbgAdapterExecutableCommand","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","variables":{"pickProcess":"extension.pickNativeProcess","pickRemoteProcess":"extension.pickRemoteNativeProcess"},"configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","properties":{"name":"string","value":"string"}},"default":[]},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to debug server to launch. Defaults to null.","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched. Note this option is ignored in some cases for technical reasons.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"attach":{"type":"object","required":["program","processId"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]}}}}},{"type":"cppvsdbg","label":"C++ (Windows)","enableBreakpointsFor":{"languageIds":["c","cpp"]},"adapterExecutableCommand":"extension.cppvsdbgAdapterExecutableCommand","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","variables":{"pickProcess":"extension.pickNativeProcess"},"configurationAttributes":{"launch":{"type":"object","required":["program","cwd"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"cwd":{"type":"string","description":"The working directory of the target.","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","properties":{"name":"string","value":"string"}},"default":[]},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}}}}},"attach":{"type":"object","required":["processId"],"properties":{"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}}}}}}],"jsonValidation":[{"fileMatch":"c_cpp_properties.json","url":"./c_cpp_properties.schema.json"}],"menus":{"editor/context":[{"when":"editorLangId == c","command":"C_Cpp.GoToDeclaration","group":"navigation@2"},{"when":"editorLangId == cpp","command":"C_Cpp.GoToDeclaration","group":"navigation@2"},{"when":"editorLangId == c","command":"C_Cpp.PeekDeclaration","group":"navigation@3"},{"when":"editorLangId == cpp","command":"C_Cpp.PeekDeclaration","group":"navigation@3"},{"when":"editorLangId == c","command":"C_Cpp.SwitchHeaderSource","group":"other@1"},{"when":"editorLangId == cpp","command":"C_Cpp.SwitchHeaderSource","group":"other@1"},{"when":"editorLangId == c","command":"C_Cpp.Navigate","group":"other@2"},{"when":"editorLangId == cpp","command":"C_Cpp.Navigate","group":"other@2"},{"when":"editorLangId == c","command":"workbench.action.gotoSymbol","group":"other@3"},{"when":"editorLangId == cpp","command":"workbench.action.gotoSymbol","group":"other@3"},{"when":"editorLangId == c","command":"workbench.action.showAllSymbols","group":"other@4"},{"when":"editorLangId == cpp","command":"workbench.action.showAllSymbols","group":"other@4"}]},"configurationDefaults":{"[cpp]":{"editor.autoIndent":false},"[c]":{"editor.autoIndent":false}},"snippets":[{"language":"cpp","path":"./cpp_snippets.json"},{"language":"c","path":"./cpp_snippets.json"}]},"scripts":{"compile":"npm run vscode:prepublish","generateOptionsSchema":"gulp generateOptionsSchema","integrationTests":"gulp integrationTests","postinstall":"node ./node_modules/vscode/bin/install","pretest":"tsc -p ./","pr-check":"gulp pr-check","test":"gulp allTests","tslint":"gulp tslint","unitTests":"gulp unitTests","vscode:prepublish":"node ./src/Support/prepublish.js","watch":"tsc -watch -p ./"},"devDependencies":{"@types/mocha":"^2.2.43","@types/node":"^8.0.46","gulp":"3.9.1","gulp-env":"0.4.0","gulp-mocha":"5.0.0","gulp-tslint":"8.1.2","mocha":"^4.0.1","tslint":"5.8.0","tslint-microsoft-contrib":"5.0.1","tslint-no-unused-expression-chai":"0.0.3","typescript":"^2.5.3","vrsource-tslint-rules":"^5.8.2","vscode":"^1.1.17"},"dependencies":{"http-proxy-agent":"~2.0.0","https-proxy-agent":"~2.2.0","jsonc-parser":"^1.0.0","minimatch":"~3.0.4","mkdirp":"~0.5.1","tmp":"~0.0.33","vscode-debugadapter":"~1.24.0","vscode-debugprotocol":"~1.24.0","vscode-extension-telemetry":"~0.0.11","vscode-languageclient":"3.5.1","yauzl":"~2.8.0"},"runtimeDependencies":[{"description":"C/C++ language components (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?linkid=874519","platforms":["linux"],"architectures":["x86_64"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.linux","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.linux"]},{"description":"C/C++ language components (Linux / x86)","url":"https://go.microsoft.com/fwlink/?linkid=874520","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.linux","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.linux"]},{"description":"C/C++ language components (OS X)","url":"https://go.microsoft.com/fwlink/?linkid=874521","platforms":["darwin"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.darwin","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.darwin"]},{"description":"C/C++ language components (Windows)","url":"https://go.microsoft.com/fwlink/?linkid=874522","platforms":["win32"],"binaries":[]},{"description":"ClangFormat (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkID=872607","platforms":["linux"],"architectures":["x86_64"],"binaries":["./LLVM/bin/clang-format"]},{"description":"ClangFormat (Linux / x86)","url":"https://go.microsoft.com/fwlink/?LinkID=872608","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./LLVM/bin/clang-format"]},{"description":"ClangFormat (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=872609","platforms":["darwin"],"binaries":["./LLVM/bin/clang-format.darwin"]},{"description":"ClangFormat (Windows)","url":"https://go.microsoft.com/fwlink/?LinkID=872610","platforms":["win32"],"binaries":[]},{"description":"Mono Framework Assemblies","url":"https://go.microsoft.com/fwlink/?LinkId=816539","platforms":["linux","darwin"],"binaries":[]},{"description":"Mono Runtime (Linux / x86)","url":"https://go.microsoft.com/fwlink/?LinkId=816540","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./debugAdapters/mono.linux-x86"]},{"description":"Mono Runtime (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkId=816541","platforms":["linux"],"architectures":["x86_64"],"binaries":["./debugAdapters/mono.linux-x86_64"]},{"description":"Mono Runtime (OS X)","url":"https://go.microsoft.com/fwlink/?LinkId=816542","platforms":["darwin"],"binaries":["./debugAdapters/mono.osx"]},{"description":"LLDB 3.8.0 (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=817244","platforms":["darwin"],"binaries":["./debugAdapters/lldb/bin/debugserver","./debugAdapters/lldb/bin/lldb-mi","./debugAdapters/lldb/bin/lldb-argdumper","./debugAdapters/lldb/bin/lldb-launcher"]},{"description":"Visual Studio Windows Debugger","url":"https://go.microsoft.com/fwlink/?linkid=872985","platforms":["win32"],"binaries":[]}],"uuid":"690b692e-e8a9-493f-b802-8089d50ac1b2","isBuiltin":false,"id":"ms-vscode.cpptools","extensionFolderPath":"/Users/NateHart/.vscode/extensions/ms-vscode.cpptools-0.17.3"},{"name":"csharp","publisher":"ms-vscode","version":"1.15.2","description":"C# for Visual Studio Code (powered by OmniSharp).","displayName":"C#","author":"Microsoft Corporation","license":"SEE LICENSE IN RuntimeLicenses/license.txt","icon":"images/csharpIcon.png","preview":false,"bugs":{"url":"https://github.com/OmniSharp/omnisharp-vscode/issues"},"repository":{"type":"git","url":"https://github.com/OmniSharp/omnisharp-vscode.git"},"categories":["Debuggers","Programming Languages","Linters","Snippets"],"keywords":["multi-root ready"],"defaults":{"omniSharp":"1.30.1"},"main":"/Users/NateHart/.vscode/extensions/ms-vscode.csharp-1.15.2/out/src/main","scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -p ./ && gulp tslint","watch":"tsc -watch -p ./","tdd":"mocha --opts ./mocha.opts --watch --watch-extensions ts test/unitTests/**/*.test.ts*","test":"gulp test","test:unit":"gulp test:unit","test:feature":"gulp test:feature","test:integration":"gulp test:integration","test:integration:singleCsproj":"gulp test:integration:singleCsproj","test:integration:slnWithCsproj":"gulp test:integration:slnWithCsproj","test:release":"mocha --opts ./mocha.opts test/releaseTests/**/*.test.ts","test:artifacts":"mocha --opts ./mocha.opts test/artifactTests/**/*.test.ts","postinstall":"node ./node_modules/vscode/bin/install","cov:instrument":"gulp cov:instrument","cov:merge":"gulp cov:merge","cov:merge-html":"gulp cov:merge-html","cov:report":"npm-run-all cov:report:integration cov:report:unit","cov:report:unit":"gulp cov:report:unit","cov:report:integration":"gulp cov:report:integration","unpackage:vsix":"gulp vsix:release:unpackage","gulp":"gulp"},"nyc":{"include":["src/**/*.ts","src/**/*.tsx"],"extension":[".ts",".tsx"],"require":["ts-node/register","source-map-support/register"],"sourceMap":true,"instrument":true},"dependencies":{"async-file":"^2.0.2","fs-extra":"^5.0.0","http-proxy-agent":"^2.0.0","https-proxy-agent":"^2.1.1","jsonc-parser":"^1.0.0","mkdirp":"^0.5.1","node-filter-async":"0.0.4","open":"*","request-light":"^0.2.0","rxjs":"^5.5.6","semver":"*","tmp":"0.0.33","vscode-debugprotocol":"^1.6.1","vscode-extension-telemetry":"0.0.15","yauzl":"^2.9.1"},"devDependencies":{"@types/archiver":"^2.1.1","@types/chai":"^4.1.2","@types/chai-arrays":"1.0.2","@types/chai-as-promised":"^7.1.0","@types/chai-string":"^1.4.0","@types/del":"^3.0.1","@types/fs-extra":"^5.0.1","@types/gulp":"^3.8.36","@types/gulp-mocha":"0.0.32","@types/istanbul":"^0.4.30","@types/minimist":"^1.2.0","@types/mkdirp":"^0.5.2","@types/mocha":"^2.2.48","@types/node":"^9.4.7","@types/semver":"^5.5.0","@types/tmp":"0.0.33","@types/yauzl":"^2.9.0","archiver":"^2.1.1","async-child-process":"^1.1.1","async-shelljs":"^0.1.2","chai":"4.1.2","chai-arrays":"2.0.0","chai-as-promised":"7.1.1","chai-fs":"2.0.0","chai-string":"^1.4.0","codecov":"^3.0.0","copyfiles":"^2.0.0","cross-env":"^5.1.4","del":"3.0.0","get-port":"^3.2.0","glob-promise":"^3.4.0","gulp":"3.9.1","gulp-mocha":"^5.0.0","gulp-sequence":"^1.0.0","gulp-tslint":"^8.1.3","istanbul":"^0.4.5","istanbul-combine":"^0.3.0","ltcdr":"^2.2.1","minimist":"^1.2.0","mocha":"^5.0.4","mocha-typescript":"^1.1.12","mock-http-server":"^0.2.0","npm-run-all":"^4.1.2","nyc":"^11.6.0","plist":"^3.0.1","remap-istanbul":"^0.11.0","source-map-support":"^0.5.4","ts-node":"^5.0.1","tslint":"^5.9.1","tslint-microsoft-contrib":"^5.0.3","tslint-no-unused-expression-chai":"^0.1.3","typescript":"^2.7.2","unzip2":"^0.2.5","vsce":"^1.39.0","vscode":"^1.1.14"},"runtimeDependencies":[{"description":"OmniSharp for Windows (.NET 4.6 / x86)","url":"https://download.visualstudio.microsoft.com/download/pr/12245767/0c5c04bed389ea023a731f6da6d31ab8/omnisharp-win-x86-1.30.1.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-win-x86-1.30.1.zip","installPath":".omnisharp/1.30.1","platforms":["win32"],"architectures":["x86"],"installTestPath":"./.omnisharp/OmniSharp.exe","platformId":"win-x86"},{"description":"OmniSharp for Windows (.NET 4.6 / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/12245763/b72bb97e2890bc67301aa8aca3cd382e/omnisharp-win-x64-1.30.1.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-win-x64-1.30.1.zip","installPath":".omnisharp/1.30.1","platforms":["win32"],"architectures":["x86_64"],"installTestPath":"./.omnisharp/OmniSharp.exe","platformId":"win-x64"},{"description":"OmniSharp for OSX","url":"https://download.visualstudio.microsoft.com/download/pr/12245766/987fff9362fc85ba8f00d9a31889623c/omnisharp-osx-1.30.1.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-osx-1.30.1.zip","installPath":".omnisharp/1.30.1","platforms":["darwin"],"binaries":["./mono.osx","./run"],"installTestPath":"./.omnisharp/run","platformId":"osx"},{"description":"OmniSharp for Linux (x86)","url":"https://download.visualstudio.microsoft.com/download/pr/12245764/3026884a5425856a0de04f1e468d25a8/omnisharp-linux-x86-1.30.1.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-linux-x86-1.30.1.zip","installPath":".omnisharp/1.30.1","platforms":["linux"],"architectures":["x86","i686"],"binaries":["./mono.linux-x86","./run"],"installTestPath":"./.omnisharp/run","platformId":"linux-x86"},{"description":"OmniSharp for Linux (x64)","url":"https://download.visualstudio.microsoft.com/download/pr/12245765/02c6e1855587e0f6b0be479d5ce88d62/omnisharp-linux-x64-1.30.1.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-linux-x64-1.30.1.zip","installPath":".omnisharp/1.30.1","platforms":["linux"],"architectures":["x86_64"],"binaries":["./mono.linux-x86_64","./run"],"installTestPath":"./.omnisharp/run","platformId":"linux-x64"},{"description":".NET Core Debugger (Windows / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/12267706/d27a74d91a12c0e78222081afdf8e0bb/coreclr-debug-win7-x64.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-15-2/coreclr-debug-win7-x64.zip","installPath":".debugger","platforms":["win32"],"architectures":["x86_64"],"installTestPath":"./.debugger/vsdbg-ui.exe"},{"description":".NET Core Debugger (macOS / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/12149320/af1529a62f43fb8a922eccf750bdf9f7/coreclr-debug-osx-x64.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-15-1/coreclr-debug-osx-x64.zip","installPath":".debugger","platforms":["darwin"],"architectures":["x86_64"],"binaries":["./vsdbg-ui","./vsdbg"],"installTestPath":"./.debugger/vsdbg-ui"},{"description":".NET Core Debugger (linux / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/12149320/af1529a62f43fb8a922eccf750bdf9f7/coreclr-debug-linux-x64.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-15-1/coreclr-debug-linux-x64.zip","installPath":".debugger","platforms":["linux"],"architectures":["x86_64"],"binaries":["./vsdbg-ui","./vsdbg"],"installTestPath":"./.debugger/vsdbg-ui"}],"engines":{"vscode":"^1.18.0"},"activationEvents":["onDebug","onLanguage:csharp","onCommand:o.restart","onCommand:o.pickProjectAndStart","onCommand:o.showOutput","onCommand:dotnet.restore","onCommand:dotnet.generateAssets","onCommand:csharp.downloadDebugger","onCommand:csharp.listProcess","onCommand:csharp.listRemoteProcess","workspaceContains:project.json","workspaceContains:*.csproj","workspaceContains:*.sln","workspaceContains:*.csx","workspaceContains:*.cake","workspaceContains:**/*.csproj","workspaceContains:**/*.sln","workspaceContains:**/*.csx","workspaceContains:**/*.cake"],"contributes":{"configuration":{"title":"C# configuration","properties":{"csharp.format.enable":{"type":"boolean","default":true,"description":"Enable/disable default C# formatter (requires restart)."},"csharp.suppressDotnetInstallWarning":{"type":"boolean","default":false,"description":"Suppress the warning that the .NET CLI is not on the path."},"csharp.unitTestDebuggingOptions":{"type":"object","description":"Options to use with the debugger when launching for unit test debugging. Any launch.json option is valid here.","default":{},"properties":{"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.vsdbg/SymbolCache.","default":"~/.vsdbg/SymbolCache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"type":{"type":"string","enum":["coreclr","clr"],"description":"Type type of code to debug. Can be either 'coreclr' for .NET Core debugging, or 'clr' for Desktop .NET Framework. 'clr' only works on Windows as the Desktop framework is Windows-only.","default":"coreclr"},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711}}},"csharp.suppressDotnetRestoreNotification":{"type":"boolean","default":false,"description":"Suppress the notification window to perform a 'dotnet restore' when dependencies can't be resolved."},"csharp.suppressProjectJsonWarning":{"type":"boolean","default":false,"description":"Suppress the warning that project.json is no longer a supported project format for .NET Core applications"},"csharp.suppressHiddenDiagnostics":{"type":"boolean","default":true,"description":"Suppress 'hidden' diagnostics (such as 'unnecessary using directives') from appearing in the editor or the Problems pane."},"csharp.referencesCodeLens.enabled":{"type":"boolean","default":true,"description":"Specifies whether the references CodeLens should be show be shown."},"csharp.testsCodeLens.enabled":{"type":"boolean","default":true,"description":"Specifies whether the run and debug test CodeLens should be show be shown."},"omnisharp.path":{"type":["string","null"],"default":null,"description":"Specifies the path to OmniSharp. This can be the absolute path to an OmniSharp executable, a specific version number, or \"latest\". If a version number or \"latest\" is specified, the appropriate version of OmniSharp will be downloaded on your behalf."},"omnisharp.useGlobalMono":{"type":"string","default":"auto","enum":["auto","always","never"],"enumDescriptions":["Automatically launch OmniSharp with \"mono\" if version 5.8.1 or greater is available on the PATH.","Always launch OmniSharp with \"mono\". If version 5.8.1 or greater is not available on the PATH, an error will be printed.","Never launch OmniSharp on a globally-installed Mono."],"description":"Launch OmniSharp with the globally-installed Mono. If set to \"always\", \"mono\" version 5.8.1 or greater must be available on the PATH. If set to \"auto\", OmniSharp will be launched with \"mono\" if version 5.8.1 or greater is available on the PATH."},"omnisharp.waitForDebugger":{"type":"boolean","default":false,"description":"Pass the --debug flag when launching the OmniSharp server to allow a debugger to be attached."},"omnisharp.loggingLevel":{"type":"string","default":"information","enum":["trace","debug","information","warning","error","critical"],"description":"Specifies the level of logging output from the OmniSharp server."},"omnisharp.autoStart":{"type":"boolean","default":true,"description":"Specifies whether the OmniSharp server will be automatically started or not. If false, OmniSharp can be started with the 'Restart OmniSharp' command"},"omnisharp.projectLoadTimeout":{"type":"number","default":60,"description":"The time Visual Studio Code will wait for the OmniSharp server to start. Time is expressed in seconds."},"omnisharp.maxProjectResults":{"type":"number","default":250,"description":"The maximum number of projects to be shown in the 'Select Project' dropdown (maximum 250)."},"omnisharp.useEditorFormattingSettings":{"type":"boolean","default":true,"description":"Specifes whether OmniSharp should use VS Code editor settings for C# code formatting (use of tabs, indentation size)."},"omnisharp.disableMSBuildDiagnosticWarning":{"type":"boolean","default":false,"description":"Specifies whether notifications should be shown if OmniSharp encounters warnings or errors loading a project. Note that these warnings/errors are always emitted to the OmniSharp log"}}},"jsonValidation":[{"fileMatch":"project.json","url":"http://json.schemastore.org/project"},{"fileMatch":"omnisharp.json","url":"http://json.schemastore.org/omnisharp"}],"commands":[{"command":"o.restart","title":"Restart OmniSharp","category":"OmniSharp"},{"command":"o.pickProjectAndStart","title":"Select Project","category":"OmniSharp"},{"command":"dotnet.generateAssets","title":"Generate Assets for Build and Debug","category":".NET"},{"command":"dotnet.restore","title":"Restore Packages","category":".NET"},{"command":"csharp.downloadDebugger","title":"Download .NET Core Debugger","category":"Debug"},{"command":"csharp.listProcess","title":"List process for attach","category":"CSharp"},{"command":"csharp.listRemoteProcess","title":"List processes on remote connection for attach","category":"CSharp"}],"keybindings":[{"command":"o.showOutput","key":"Ctrl+L L","mac":"Cmd+L L"}],"snippets":[{"language":"csharp","path":"./snippets/csharp.json"}],"debuggers":[{"type":"coreclr","label":".NET Core","enableBreakpointsFor":{"languageIds":["csharp","razor"]},"variables":{"pickProcess":"csharp.listProcess","pickRemoteProcess":"csharp.listRemoteProcess"},"adapterExecutableCommand":"csharp.coreclrAdapterExecutableCommand","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","description":"Path to the application dll or .NET Core host executable to launch.\nThis property normally takes the form: '${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)'\nExample: '${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll'\n\nWhere:\n(target-framework) is the framework that the debugged project is being built for. This is normally found in the project file as the 'TargetFramework' property.\n(project-name.dll) is the name of debugged project's build output dll. This is normally the same as the project file name but with a '.dll' extension.","default":"${workspaceFolder}/bin/Debug/<insert-target-framework-here>/<insert-project-name-here>.dll"},"cwd":{"type":"string","description":"Path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceFolder}"},"args":{"anyOf":[{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the program.","default":""}]},"stopAtEntry":{"type":"boolean","description":"If true, the debugger should stop at the entry point of the target.","default":false},"launchBrowser":{"description":"Describes options to launch a web browser as part of launch","default":{"enabled":true,"args":"${auto-detect-url}","windows":{"command":"cmd.exe","args":"/C start ${auto-detect-url}"},"osx":{"command":"open"},"linux":{"command":"xdg-open"}},"type":"object","properties":{"enabled":{"type":"boolean","description":"Whether web browser launch is enabled","default":true},"args":{"anyOf":[{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the program.","default":""}],"default":"${auto-detect-url}"},"osx":{"description":"OSX-specific web launch configuration options","default":{"command":"open"},"type":"object","properties":{"command":{"type":"string","description":"The command to execute for launching the web browser","default":"open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to","default":"${auto-detect-url}"}}},"linux":{"description":"Linux-specific web launch configuration options","default":{"command":"xdg-open"},"type":"object","properties":{"command":{"type":"string","description":"The command to execute for launching the web browser","default":"xdg-open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to","default":"${auto-detect-url}"}}},"windows":{"description":"Windows-specific web launch configuration options","default":{"command":"cmd.exe","args":"/C start ${auto-detect-url}"},"type":"object","properties":{"command":{"type":"string","description":"The command to execute for launching the web browser","default":"cmd.exe"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to","default":"${auto-detect-url}"}}}}},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:Console.ReadLine)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"description":"Where to launch the debug target.","default":"internalConsole"},"externalConsole":{"type":"boolean","description":"Attribute 'externalConsole' is deprecated, use 'console' instead.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.vsdbg/SymbolCache.","default":"~/.vsdbg/SymbolCache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}}}},"attach":{"type":"object","required":[],"properties":{"processName":{"type":"string","description":"","default":"The process name to attach to. If this is used, 'processId' should not be used."},"processId":{"anyOf":[{"type":"string","description":"The process id to attach to. Use \"${command:pickProcesss}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":"${command:pickProcess}"},{"type":"integer","description":"The process id to attach to. Use \"${command:pickProcesss}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":0}]},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.vsdbg/SymbolCache.","default":"~/.vsdbg/SymbolCache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}}}}},"configurationSnippets":[{"label":".NET: Launch .NET Core Console App","description":"Launch a .NET Core Console App with a debugger.","body":{"name":".NET Core Launch (console)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceRoot}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceRoot}\"","stopAtEntry":false,"console":"internalConsole"}},{"label":".NET: Attach to local .NET Core Console App","description":"Attach a debugger to a .NET Core Console App.","body":{"name":".NET Core Attach","type":"coreclr","request":"attach","processId":"^\"\\${command:pickProcess}\""}},{"label":".NET: Launch a local .NET Core Web App","description":"Launch a .NET Core Web App with both a browser and a debugger.","body":{"name":".NET Core Launch (web)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceRoot}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceRoot}\"","stopAtEntry":false,"launchBrowser":{"enabled":true,"args":"^\"\\${auto-detect-url}\"","windows":{"command":"cmd.exe","args":"^\"/C start \\${auto-detect-url}\""},"osx":{"command":"open"},"linux":{"command":"xdg-open"}},"env":{"ASPNETCORE_ENVIRONMENT":"Development"},"sourceFileMap":{"/Views":"^\"\\${workspaceRoot}/Views\""}}},{"label":".NET: Launch a remote .NET Core Console App","description":"Launch a .NET Core Console App on a remote machine.","body":{"name":".NET Core Launch (console)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceRoot}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceRoot}\"","stopAtEntry":false,"console":"internalConsole","pipeTransport":{"pipeCwd":"^\"\\${workspaceRoot}\"","pipeProgram":"^\"${3:enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'}\"","pipeArgs":[],"debuggerPath":"^\"${4:enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg}\""}}},{"label":".NET: Attach to remote .NET Core Console App","description":"Attach a debugger to a .NET Core Console App on a remote machine.","body":{"name":".NET Core Attach","type":"coreclr","request":"attach","processId":"^\"\\${command:pickRemoteProcess}\"","pipeTransport":{"pipeCwd":"^\"\\${workspaceRoot}\"","pipeProgram":"^\"${1:enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'}\"","pipeArgs":[],"debuggerPath":"^\"${2:enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg}\""}}}]},{"type":"clr","label":".NET","enableBreakpointsFor":{"languageIds":["csharp","razor"]},"variables":{"pickProcess":"csharp.listProcess","pickRemoteProcess":"csharp.listRemoteProcess"},"adapterExecutableCommand":"csharp.clrAdapterExecutableCommand","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","description":"Path to the application dll or .NET Core host executable to launch.\nThis property normally takes the form: '${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)'\nExample: '${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll'\n\nWhere:\n(target-framework) is the framework that the debugged project is being built for. This is normally found in the project file as the 'TargetFramework' property.\n(project-name.dll) is the name of debugged project's build output dll. This is normally the same as the project file name but with a '.dll' extension.","default":"${workspaceFolder}/bin/Debug/<insert-target-framework-here>/<insert-project-name-here>.dll"},"cwd":{"type":"string","description":"Path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceFolder}"},"args":{"anyOf":[{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the program.","default":""}]},"stopAtEntry":{"type":"boolean","description":"If true, the debugger should stop at the entry point of the target.","default":false},"launchBrowser":{"description":"Describes options to launch a web browser as part of launch","default":{"enabled":true,"args":"${auto-detect-url}","windows":{"command":"cmd.exe","args":"/C start ${auto-detect-url}"},"osx":{"command":"open"},"linux":{"command":"xdg-open"}},"type":"object","properties":{"enabled":{"type":"boolean","description":"Whether web browser launch is enabled","default":true},"args":{"anyOf":[{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the program.","default":""}],"default":"${auto-detect-url}"},"osx":{"description":"OSX-specific web launch configuration options","default":{"command":"open"},"type":"object","properties":{"command":{"type":"string","description":"The command to execute for launching the web browser","default":"open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to","default":"${auto-detect-url}"}}},"linux":{"description":"Linux-specific web launch configuration options","default":{"command":"xdg-open"},"type":"object","properties":{"command":{"type":"string","description":"The command to execute for launching the web browser","default":"xdg-open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to","default":"${auto-detect-url}"}}},"windows":{"description":"Windows-specific web launch configuration options","default":{"command":"cmd.exe","args":"/C start ${auto-detect-url}"},"type":"object","properties":{"command":{"type":"string","description":"The command to execute for launching the web browser","default":"cmd.exe"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to","default":"${auto-detect-url}"}}}}},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:Console.ReadLine)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"description":"Where to launch the debug target.","default":"internalConsole"},"externalConsole":{"type":"boolean","description":"Attribute 'externalConsole' is deprecated, use 'console' instead.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.vsdbg/SymbolCache.","default":"~/.vsdbg/SymbolCache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}}}},"attach":{"type":"object","required":[],"properties":{"processName":{"type":"string","description":"","default":"The process name to attach to. If this is used, 'processId' should not be used."},"processId":{"anyOf":[{"type":"string","description":"The process id to attach to. Use \"${command:pickProcesss}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":"${command:pickProcess}"},{"type":"integer","description":"The process id to attach to. Use \"${command:pickProcesss}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":0}]},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn’t used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.vsdbg/SymbolCache.","default":"~/.vsdbg/SymbolCache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}}}}}}]},"uuid":"d0bfc4ab-1d3a-4487-8782-7cf6027b4fff","isBuiltin":false,"id":"ms-vscode.csharp","extensionFolderPath":"/Users/NateHart/.vscode/extensions/ms-vscode.csharp-1.15.2"},{"name":"postcss","displayName":"PostCSS syntax","description":"PostCSS language support","version":"2.0.0","publisher":"ricard","engines":{"vscode":"*"},"categories":["Languages"],"repository":{"type":"git","url":"git+https://github.com/rcsole/postcss-syntax.git"},"author":"Ricard Solé Casas <ricardsolecasas@gmail.com>","license":"ISC","bugs":{"url":"https://github.com/rcsole/postcss-syntax/issues"},"homepage":"https://github.com/rcsole/postcss-syntax#readme","contributes":{"languages":[{"id":"postcss","aliases":["PostCSS","postcss"],"extensions":[".pcss",".postcss"],"mimetypes":["text/x-postcss","text/postcss"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"postcss","scopeName":"source.css.postcss","path":"./syntaxes/postcss.tmLanguage.json"}]},"uuid":"04a962b1-1f76-484a-adcb-28119ea5ae1f","isBuiltin":false,"id":"ricard.postcss","extensionFolderPath":"/Users/NateHart/.vscode/extensions/ricard.postcss-2.0.0"},{"name":"vim","displayName":"Vim","description":"Vim emulation for Visual Studio Code","icon":"images/icon.png","version":"0.12.0","publisher":"vscodevim","galleryBanner":{"color":"#e3f4ff","theme":"light"},"license":"MIT","keywords":["vim","vi","vscodevim"],"repository":{"type":"git","url":"https://github.com/VSCodeVim/Vim.git"},"homepage":"https://github.com/VSCodeVim/Vim","bugs":{"url":"https://github.com/VSCodeVim/Vim/issues"},"engines":{"vscode":"^1.17.0"},"categories":["Other","Keymaps"],"activationEvents":["*"],"qna":"https://vscodevim-slackin.azurewebsites.net/","main":"/Users/NateHart/.vscode/extensions/vscodevim.vim-0.12.0/out/extension","contributes":{"commands":[{"command":"extension.showCmdLine","title":"Vim: Show Command Line"},{"command":"vim.remap","title":"Vim: Remap any key combination that VS Code supports to Vim motions/operators/ExCommands/macro."},{"command":"toggleVim","title":"Vim: Toggle Vim Mode"}],"keybindings":[{"key":"Escape","command":"extension.vim_escape","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Home","command":"extension.vim_home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"End","command":"extension.vim_end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"Insert","command":"extension.vim_insert","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Backspace","command":"extension.vim_backspace","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Delete","command":"extension.vim_delete","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"tab","command":"extension.vim_tab","when":"editorFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"left","command":"extension.vim_left","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"right","command":"extension.vim_right","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"up","command":"extension.vim_up","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !suggestWidgetMultipleSuggestions"},{"key":"down","command":"extension.vim_down","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !suggestWidgetMultipleSuggestions"},{"key":"g g","command":"list.focusFirst","when":"listFocus && !inputFocus"},{"key":"h","command":"list.collapse","when":"listFocus && !inputFocus"},{"key":"j","command":"list.focusDown","when":"listFocus && !inputFocus"},{"key":"k","command":"list.focusUp","when":"listFocus && !inputFocus"},{"key":"l","command":"list.select","when":"listFocus && !inputFocus"},{"key":"o","command":"list.toggleExpand","when":"listFocus && !inputFocus"},{"key":"ctrl+a","command":"extension.vim_ctrl+a","when":"editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"},{"key":"ctrl+b","command":"extension.vim_ctrl+b","when":"editorTextFocus && vim.active && vim.use<C-b> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+c","command":"extension.vim_ctrl+c","when":"editorTextFocus && vim.active && vim.use<C-c> && !inDebugRepl && vim.overrideCtrlC"},{"key":"ctrl+d","command":"extension.vim_ctrl+d","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"ctrl+d","command":"list.focusPageDown","when":"listFocus && !inputFocus"},{"key":"ctrl+e","command":"extension.vim_ctrl+e","when":"editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"},{"key":"ctrl+f","command":"extension.vim_ctrl+f","when":"editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl"},{"key":"ctrl+h","command":"extension.vim_ctrl+h","when":"editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"},{"key":"ctrl+i","command":"extension.vim_ctrl+i","when":"editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"},{"key":"ctrl+j","command":"extension.vim_ctrl+j","when":"editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"},{"key":"ctrl+k","command":"extension.vim_ctrl+k","when":"editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"},{"key":"ctrl+l","command":"extension.vim_navigateCtrlL","when":"editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"},{"key":"ctrl+n","command":"extension.vim_ctrl+n","when":"editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl"},{"key":"ctrl+o","command":"extension.vim_ctrl+o","when":"editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"},{"key":"ctrl+p","command":"extension.vim_ctrl+p","when":"suggestWidgetVisible && vim.active && vim.use<C-p>"},{"key":"ctrl+q","command":"extension.vim_winCtrlQ","when":"editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"},{"key":"ctrl+r","command":"extension.vim_ctrl+r","when":"editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"},{"key":"ctrl+t","command":"extension.vim_ctrl+t","when":"editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"},{"key":"ctrl+u","command":"extension.vim_ctrl+u","when":"editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"},{"key":"ctrl+u","command":"list.focusPageUp","when":"listFocus && !inputFocus"},{"key":"ctrl+v","command":"extension.vim_ctrl+v","when":"editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"},{"key":"ctrl+w","command":"extension.vim_ctrl+w","when":"editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"},{"key":"ctrl+x","command":"extension.vim_ctrl+x","when":"editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"},{"key":"ctrl+y","command":"extension.vim_ctrl+y","when":"editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"},{"key":"ctrl+[","command":"extension.vim_ctrl+[","when":"editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"},{"key":"ctrl+]","command":"extension.vim_ctrl+]","when":"editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"},{"key":"ctrl+shift+2","command":"extension.vim_ctrl+shift+2","when":"editorTextFocus && vim.active && vim.use<C-shift+2>"},{"key":"ctrl+pagedown","command":"extension.vim_ctrl+pagedown","when":"editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"},{"key":"ctrl+pageup","command":"extension.vim_ctrl+pageup","when":"editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"},{"key":"shift+G","command":"list.focusLast","when":"listFocus && !inputFocus"},{"key":"shift+backspace","command":"extension.vim_shift+backspace","when":"editorTextFocus && vim.active && vim.use<shift+BS> && vim.mode == 'SearchInProgressMode' && !inDebugRepl"},{"key":"cmd+left","command":"extension.vim_cmd+left","when":"editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+right","command":"extension.vim_cmd+right","when":"editorTextFocus && vim.active && vim.use<D-right> &&  !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+a","command":"extension.vim_cmd+a","when":"editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+c","command":"extension.vim_cmd+c","when":"editorTextFocus && vim.active && vim.use<D-c> && vim.overrideCopy && !inDebugRepl"},{"key":"cmd+d","command":"extension.vim_cmd+d","when":"editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"},{"key":"cmd+v","command":"extension.vim_cmd+v","when":"editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'SearchInProgressMode' && !inDebugRepl"},{"key":"ctrl+alt+down","linux":"shift+alt+down","mac":"cmd+alt+down","command":"extension.vim_cmd+alt+down","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"ctrl+alt+up","linux":"shift+alt+up","mac":"cmd+alt+up","command":"extension.vim_cmd+alt+up","when":"editorTextFocus && vim.active && !inDebugRepl"}],"configuration":{"title":"Vim Configuration","type":"object","properties":{"vim.otherModesKeyBindings":{"type":"array","description":"Remapped keys in normal mode. Allows mapping to vim commands or vscode actions. See README for more."},"vim.otherModesKeyBindingsNonRecursive":{"type":"array","description":"Non-recursive remapped keys in normal mode. Allows mapping to vim commands or vscode actions. See README for more."},"vim.useCtrlKeys":{"type":"boolean","description":"Enable some vim ctrl key commands that override otherwise common operations, like ctrl+c","default":true},"vim.leader":{"type":"string","description":"What key should <leader> map to in remappings?","default":"\\"},"vim.searchHighlightColor":{"type":"string","description":"Color of the search highlight.","default":"rgba(150, 150, 255, 0.3)"},"vim.useSystemClipboard":{"type":"boolean","description":"Use system clipboard for unnamed register.","default":false},"vim.overrideCopy":{"type":"boolean","description":"Override VSCode's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working.","default":true},"vim.insertModeKeyBindings":{"type":"array","description":"Remapped keys in insert mode. Allows mapping to vim commands or vscode actions. See README for more."},"vim.insertModeKeyBindingsNonRecursive":{"type":"array","description":"Non-recursive keybinding overrides to use for insert mode. Allows mapping to vim commands or vscode actions. See README for more."},"vim.textwidth":{"type":"number","description":"Width to word-wrap to when using gq.","default":80},"vim.timeout":{"type":"number","description":"Timeout in milliseconds for remapped commands","default":1000},"vim.scroll":{"type":"number","description":"Number of lines to scroll with CTRL-U and CTRL-D commands.","default":20},"vim.showcmd":{"type":"boolean","description":"Show the text of any command you are in the middle of writing.","default":true},"vim.showmodename":{"type":"boolean","description":"Show the name of the current mode in the statusbar.","default":true},"vim.iskeyword":{"type":"string","description":"keywords contain alphanumeric characters and '_'","default":"/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-"},"vim.ignorecase":{"type":"boolean","description":"Ignore case in search patterns.","default":true},"vim.smartcase":{"type":"boolean","description":"Override the 'ignorecase' option if the search pattern contains upper case characters.","default":true},"vim.easymotion":{"type":"boolean","description":"Enable the EasyMotion plugin for Vim.","default":false},"vim.easymotionMarkerBackgroundColor":{"type":"string","description":"Set a custom background color for EasyMotion markers."},"vim.easymotionMarkerForegroundColorOneChar":{"type":"string","description":"Set a custom color for the text on one character long markers."},"vim.easymotionMarkerForegroundColorTwoChar":{"type":"string","description":"Set a custom color for the text on two character long markers."},"vim.easymotionMarkerWidthPerChar":{"type":"number","description":"Set the width (in pixels) allocated to each character in the match.","default":8},"vim.easymotionMarkerHeight":{"type":"number","description":"Set the height of the marker.","default":14},"vim.easymotionMarkerFontFamily":{"type":"string","description":"Set the font family of the marker text.","default":"Consolas"},"vim.easymotionMarkerFontSize":{"type":"string","description":"Set the font size of the marker text.","default":"14"},"vim.easymotionMarkerFontWeight":{"type":"string","description":"Set the font weight of the marker text.","default":"normal"},"vim.easymotionMarkerYOffset":{"type":"number","description":"Set the Y offset of the marker text (the distance from the top).","default":0},"vim.easymotionKeys":{"type":"string","description":"Set the characters used for jump marker name","default":"hklyuiopnm,qwertzxcvbasdgjf;"},"vim.easymotionJumpToAnywhereRegex":{"type":"string","description":"Regex matches for JumpToAnywhere motion","default":"\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|[a-z][A-Z]"},"vim.sneak":{"type":"boolean","description":"Enable the Sneak plugin for Vim.","default":false},"vim.surround":{"type":"boolean","description":"Enable the Surround plugin for Vim.","default":true},"vim.hlsearch":{"type":"boolean","description":"Show all matches of the most recent search pattern","default":false},"vim.incsearch":{"type":"boolean","description":"Show where a / search matches as you type it.","default":true},"vim.history":{"type":"number","description":"How much search or command history should be remembered","default":50},"vim.autoindent":{"type":"boolean","description":"Indent code automatically.","default":true},"vim.startInInsertMode":{"type":"boolean","description":"Start in Insert Mode."},"vim.handleKeys":{"type":"object","description":"Option to delegate certain key combinations back to VSCode to be handled natively","default":{"<C-d>":true}},"vim.statusBarColorControl":{"type":"boolean","description":"Allow VSCodeVim to change status bar color based on mode"},"vim.statusBarColors":{"type":"object","description":"Customize colors per mode when VSCodeVim controls status bar colors"},"vim.visualstar":{"type":"boolean","description":"In visual mode, start a search with * or # using the current selection","default":false},"vim.foldfix":{"type":"boolean","description":"Uses a hack to move around folds properly","default":false},"vim.mouseSelectionGoesIntoVisualMode":{"type":"boolean","description":"Does dragging with the mouse put you into visual mode","default":true},"vim.disableExtension":{"type":"boolean","description":"Disables the VSCodeVim extension.","default":false},"vim.enableNeovim":{"type":"boolean","description":"Use neovim on backend. (only works for Ex commands right now). You should restart VScode after enable/disabling this for the changes to take effect. NOTE: Neovim must be installed (v0.2.0) and neovimPath must be set the executable in order for this setting to work. Otherwise, vscodevim will crash.","default":false},"vim.neovimPath":{"type":"string","description":"Path to run neovim executable. For example, /usr/bin/nvim, or  C:\\Program Files\\Neovim\\bin\\nvim.exe","default":"nvim"},"vim.substituteGlobalFlag":{"type":"boolean","description":"Automatically apply the global flag, /g, to substitute commands. When set to true, use /g to mean only first match should be replaced.","default":false},"vim.cursorStylePerMode":{"type":"object","description":"Customize cursor style per mode"},"vim.cmdLineInitialColon":{"type":"boolean","description":"When typing a command show the initial colon ':' character","default":false}}}},"scripts":{"vscode:prepublish":"gulp compile","build":"gulp","test":"node ./node_modules/vscode/bin/test","forceprettier":"gulp forceprettier","postinstall":"node ./node_modules/vscode/bin/install"},"dependencies":{"clipboardy":"1.2.3","diff-match-patch":"1.0.1","lodash":"4.17.10","neovim-client":"2.1.0","promised-neovim-client":"2.0.2","untildify":"3.0.2"},"devDependencies":{"@types/clipboardy":"1.1.0","@types/copy-paste":"1.1.30","@types/diff":"3.5.1","@types/diff-match-patch":"1.0.32","@types/lodash":"4.14.108","@types/mocha":"5.2.0","@types/node":"9.6.14","gulp":"3.9.1","gulp-bump":"3.1.1","gulp-filter":"5.1.0","gulp-git":"2.6.0","gulp-sourcemaps":"2.6.4","gulp-tag-version":"1.3.1","gulp-tslint":"8.1.3","gulp-typescript":"4.0.2","mocha":"5.1.1","prettier":"1.12.1","tslint":"5.10.0","typescript":"2.8.3","vscode":"1.1.17"},"uuid":"d96e79c6-8b25-4be3-8545-0e0ecefcae03","isBuiltin":false,"id":"vscodevim.vim","extensionFolderPath":"/Users/NateHart/.vscode/extensions/vscodevim.vim-0.12.0"},{"name":"Material-theme","displayName":"One Dark Pro","description":"Atom's iconic One Dark theme for Visual Studio Code","version":"2.13.6","publisher":"zhuangtongfa","bugs":{"url":"https://github.com/Binaryify/OneDark-Pro/issues"},"homepage":"https://binaryify.github.io/OneDark-Pro/","repository":{"type":"git","url":"https://github.com/Binaryify/OneDark-Pro"},"engines":{"vscode":"^1.12.0"},"categories":["Themes"],"contributes":{"themes":[{"label":"One Dark Pro","uiTheme":"vs-dark","path":"./themes/OneDark-Pro.json"},{"label":"One Dark Pro Vivid","uiTheme":"vs-dark","path":"./themes/OneDark-Pro-vivid.json"}]},"icon":"icon.png","keywords":["one dark","onedark","one dark pro","theme","atom"],"devDependencies":{"docsify-cli":"^3.3.2"},"galleryBanner":{"color":"#2d323b","theme":"dark"},"uuid":"26a529c9-2654-4b95-a63f-02f6a52429e6","isBuiltin":false,"id":"zhuangtongfa.Material-theme","extensionFolderPath":"/Users/NateHart/.vscode/extensions/zhuangtongfa.material-theme-2.13.6"}]}